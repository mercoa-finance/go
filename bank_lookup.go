// This file was auto-generated by Fern from our API Definition.

package mercoa

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/mercoa-finance/go/internal"
)

type BankLookupRequest struct {
	// Routing number to validate
	RoutingNumber string `json:"-" url:"routingNumber"`
}

type BankAddress struct {
	Address             string `json:"address" url:"address"`
	City                string `json:"city" url:"city"`
	State               string `json:"state" url:"state"`
	PostalCode          string `json:"postalCode" url:"postalCode"`
	PostalCodeExtension string `json:"postalCodeExtension" url:"postalCodeExtension"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (b *BankAddress) GetAddress() string {
	if b == nil {
		return ""
	}
	return b.Address
}

func (b *BankAddress) GetCity() string {
	if b == nil {
		return ""
	}
	return b.City
}

func (b *BankAddress) GetState() string {
	if b == nil {
		return ""
	}
	return b.State
}

func (b *BankAddress) GetPostalCode() string {
	if b == nil {
		return ""
	}
	return b.PostalCode
}

func (b *BankAddress) GetPostalCodeExtension() string {
	if b == nil {
		return ""
	}
	return b.PostalCodeExtension
}

func (b *BankAddress) GetExtraProperties() map[string]interface{} {
	return b.extraProperties
}

func (b *BankAddress) UnmarshalJSON(data []byte) error {
	type unmarshaler BankAddress
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BankAddress(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *b)
	if err != nil {
		return err
	}
	b.extraProperties = extraProperties
	b.rawJSON = json.RawMessage(data)
	return nil
}

func (b *BankAddress) String() string {
	if len(b.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(b.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}

type BankLookupResponse struct {
	BankName    string       `json:"bankName" url:"bankName"`
	BankAddress *BankAddress `json:"bankAddress" url:"bankAddress"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (b *BankLookupResponse) GetBankName() string {
	if b == nil {
		return ""
	}
	return b.BankName
}

func (b *BankLookupResponse) GetBankAddress() *BankAddress {
	if b == nil {
		return nil
	}
	return b.BankAddress
}

func (b *BankLookupResponse) GetExtraProperties() map[string]interface{} {
	return b.extraProperties
}

func (b *BankLookupResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler BankLookupResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BankLookupResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *b)
	if err != nil {
		return err
	}
	b.extraProperties = extraProperties
	b.rawJSON = json.RawMessage(data)
	return nil
}

func (b *BankLookupResponse) String() string {
	if len(b.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(b.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}
