// This file was auto-generated by Fern from our API Definition.

package mercoa

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/mercoa-finance/go/core"
)

type CustomPaymentMethodSchemaRequest struct {
	Name string `json:"name" url:"name"`
	// This payment method can be used as a payment source for an invoice
	IsSource bool `json:"isSource" url:"isSource"`
	// This payment method can be used as a payment destination for an invoice
	IsDestination bool `json:"isDestination" url:"isDestination"`
	// List of currencies that this payment method supports. If not provided, the payment method will support only USD.
	SupportedCurrencies []CurrencyCode                    `json:"supportedCurrencies,omitempty" url:"supportedCurrencies,omitempty"`
	Fields              []*CustomPaymentMethodSchemaField `json:"fields,omitempty" url:"fields,omitempty"`
	// Estimated time in days for this payment method to process a payments. Set as 0 for same-day payment methods, -1 for unknown processing time.
	EstimatedProcessingTime *int `json:"estimatedProcessingTime,omitempty" url:"estimatedProcessingTime,omitempty"`
	// The maximum amount that can be transferred from this payment method in a single transaction.
	MaxAmount *float64 `json:"maxAmount,omitempty" url:"maxAmount,omitempty"`
	// The minimum amount that can be transferred from this payment method in a single transaction. Default is 1.
	MinAmount *float64                      `json:"minAmount,omitempty" url:"minAmount,omitempty"`
	Fees      *CustomPaymentMethodSchemaFee `json:"fees,omitempty" url:"fees,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *CustomPaymentMethodSchemaRequest) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *CustomPaymentMethodSchemaRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler CustomPaymentMethodSchemaRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = CustomPaymentMethodSchemaRequest(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *CustomPaymentMethodSchemaRequest) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}
