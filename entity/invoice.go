// This file was auto-generated by Fern from our API Definition.

package entity

import (
	mercoafinancego "github.com/mercoa-finance/go"
	time "time"
)

type EntityGetInvoicesRequest struct {
	// Return only invoices that are receivable by the entity.
	ExcludePayables *bool `json:"-" url:"excludePayables,omitempty"`
	// Return only invoices that are payable by the entity.
	ExcludeReceivables *bool `json:"-" url:"excludeReceivables,omitempty"`
	// Start date for invoice created on date filter.
	StartDate *time.Time `json:"-" url:"startDate,omitempty"`
	// End date for invoice created date filter.
	EndDate *time.Time `json:"-" url:"endDate,omitempty"`
	// Field to order invoices by. Defaults to CREATED_AT.
	OrderBy *mercoafinancego.InvoiceOrderByField `json:"-" url:"orderBy,omitempty"`
	// Direction to order invoices by. Defaults to asc.
	OrderDirection *mercoafinancego.OrderDirection `json:"-" url:"orderDirection,omitempty"`
	// Number of invoices to return. Limit can range between 1 and 100, and the default is 10.
	Limit *int `json:"-" url:"limit,omitempty"`
	// The ID of the invoice to start after. If not provided, the first page of invoices will be returned.
	StartingAfter *mercoafinancego.InvoiceID `json:"-" url:"startingAfter,omitempty"`
	// Filter invoices by metadata. Each filter will be applied as an AND condition. Duplicate keys will be ignored.
	Metadata []*mercoafinancego.InvoiceMetadataFilter `json:"-" url:"metadata,omitempty"`
	// Filter invoices by line item metadata. Each filter will be applied as an AND condition. Duplicate keys will be ignored.
	LineItemMetadata []*mercoafinancego.InvoiceMetadataFilter `json:"-" url:"lineItemMetadata,omitempty"`
	// Filter invoices by line item GL account ID. Each filter will be applied as an OR condition. Duplicate keys will be ignored.
	LineItemGlAccountID []*string `json:"-" url:"lineItemGlAccountId,omitempty"`
	// Find invoices by vendor name, invoice number, or amount. Partial matches are supported.
	Search *string `json:"-" url:"search,omitempty"`
	// Filter invoices by payer ID.
	PayerID []*mercoafinancego.EntityID `json:"-" url:"payerId,omitempty"`
	// Filter invoices by vendor ID.
	VendorID []*mercoafinancego.EntityID `json:"-" url:"vendorId,omitempty"`
	// Filter invoices by assigned approver user ID.
	ApproverID []*mercoafinancego.EntityUserID `json:"-" url:"approverId,omitempty"`
	// Filter invoices by approver action. Needs to be used with approverId. For example, if you want to find all invoices that have been approved by a specific user, you would use approverId and approverAction=APPROVE.
	ApproverAction []*mercoafinancego.ApproverAction `json:"-" url:"approverAction,omitempty"`
	// Filter invoices by invoice ID.
	InvoiceID []*mercoafinancego.InvoiceID `json:"-" url:"invoiceId,omitempty"`
	// Invoice status to filter on.
	Status []*mercoafinancego.InvoiceStatus `json:"-" url:"status,omitempty"`
}

type InvoiceMetricsRequest struct {
	// Find invoices by vendor name, invoice number, or amount. Partial matches are supported.
	Search *string `json:"-" url:"search,omitempty"`
	// Only return invoices that are not payable by the entity. This will return only invoices that are receivable by the entity.
	ExcludePayables *bool `json:"-" url:"excludePayables,omitempty"`
	// Only return invoices that are not receivable by the entity. This will return only invoices that are payable by the entity.
	ExcludeReceivables *bool `json:"-" url:"excludeReceivables,omitempty"`
	// Return invoice metrics grouped by date.
	ReturnByDate *mercoafinancego.InvoiceMetricsPerDateGroupBy `json:"-" url:"returnByDate,omitempty"`
	// Filter invoices by payer ID.
	PayerID []*mercoafinancego.EntityID `json:"-" url:"payerId,omitempty"`
	// Filter invoices by vendor ID.
	VendorID []*mercoafinancego.EntityID `json:"-" url:"vendorId,omitempty"`
	// Filter invoices by assigned approver user ID.
	ApproverID []*mercoafinancego.EntityUserID `json:"-" url:"approverId,omitempty"`
	// Filter invoices by invoice ID.
	InvoiceID []*mercoafinancego.InvoiceID `json:"-" url:"invoiceId,omitempty"`
	// Invoice status to filter on
	Status []*mercoafinancego.InvoiceStatus `json:"-" url:"status,omitempty"`
	// Start date for invoice dueDate filter.
	DueDateStart *time.Time `json:"-" url:"dueDateStart,omitempty"`
	// End date for invoice dueDate filter.
	DueDateEnd *time.Time `json:"-" url:"dueDateEnd,omitempty"`
	// Start date for invoice created on date filter.
	CreatedDateStart *time.Time `json:"-" url:"createdDateStart,omitempty"`
	// End date for invoice created date filter.
	CreatedDateEnd *time.Time `json:"-" url:"createdDateEnd,omitempty"`
	// Currency to filter on
	Currency []*mercoafinancego.CurrencyCode `json:"-" url:"currency,omitempty"`
}
