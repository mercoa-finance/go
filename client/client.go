// This file was auto-generated by Fern from our API Definition.

package client

import (
	banklookup "github.com/mercoa-finance/go/banklookup"
	calculate "github.com/mercoa-finance/go/calculate"
	core "github.com/mercoa-finance/go/core"
	custompaymentmethodschema "github.com/mercoa-finance/go/custompaymentmethodschema"
	entityclient "github.com/mercoa-finance/go/entity/client"
	entitygroupclient "github.com/mercoa-finance/go/entitygroup/client"
	invoiceclient "github.com/mercoa-finance/go/invoice/client"
	invoicetemplateclient "github.com/mercoa-finance/go/invoicetemplate/client"
	ocr "github.com/mercoa-finance/go/ocr"
	option "github.com/mercoa-finance/go/option"
	organizationclient "github.com/mercoa-finance/go/organization/client"
	paymentmethods "github.com/mercoa-finance/go/paymentmethods"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *core.Caller
	header  http.Header

	EntityGroup               *entitygroupclient.Client
	Entity                    *entityclient.Client
	InvoiceTemplate           *invoicetemplateclient.Client
	Invoice                   *invoiceclient.Client
	Organization              *organizationclient.Client
	BankLookup                *banklookup.Client
	Calculate                 *calculate.Client
	CustomPaymentMethodSchema *custompaymentmethodschema.Client
	Ocr                       *ocr.Client
	PaymentMethods            *paymentmethods.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: core.NewCaller(
			&core.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:                    options.ToHeader(),
		EntityGroup:               entitygroupclient.NewClient(opts...),
		Entity:                    entityclient.NewClient(opts...),
		InvoiceTemplate:           invoicetemplateclient.NewClient(opts...),
		Invoice:                   invoiceclient.NewClient(opts...),
		Organization:              organizationclient.NewClient(opts...),
		BankLookup:                banklookup.NewClient(opts...),
		Calculate:                 calculate.NewClient(opts...),
		CustomPaymentMethodSchema: custompaymentmethodschema.NewClient(opts...),
		Ocr:                       ocr.NewClient(opts...),
		PaymentMethods:            paymentmethods.NewClient(opts...),
	}
}
