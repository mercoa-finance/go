// This file was auto-generated by Fern from our API Definition.

package mercoa

import (
	json "encoding/json"
	core "github.com/mercoa-finance/go/core"
)

type BadRequest struct {
	*core.APIError
	Body string
}

func (b *BadRequest) UnmarshalJSON(data []byte) error {
	var body string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	b.StatusCode = 400
	b.Body = body
	return nil
}

func (b *BadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.Body)
}

func (b *BadRequest) Unwrap() error {
	return b.APIError
}

type Conflict struct {
	*core.APIError
	Body string
}

func (c *Conflict) UnmarshalJSON(data []byte) error {
	var body string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	c.StatusCode = 409
	c.Body = body
	return nil
}

func (c *Conflict) MarshalJSON() ([]byte, error) {
	return json.Marshal(c.Body)
}

func (c *Conflict) Unwrap() error {
	return c.APIError
}

type Forbidden struct {
	*core.APIError
	Body string
}

func (f *Forbidden) UnmarshalJSON(data []byte) error {
	var body string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	f.StatusCode = 403
	f.Body = body
	return nil
}

func (f *Forbidden) MarshalJSON() ([]byte, error) {
	return json.Marshal(f.Body)
}

func (f *Forbidden) Unwrap() error {
	return f.APIError
}

type InternalServerError struct {
	*core.APIError
	Body string
}

func (i *InternalServerError) UnmarshalJSON(data []byte) error {
	var body string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	i.StatusCode = 500
	i.Body = body
	return nil
}

func (i *InternalServerError) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.Body)
}

func (i *InternalServerError) Unwrap() error {
	return i.APIError
}

type NotFound struct {
	*core.APIError
	Body string
}

func (n *NotFound) UnmarshalJSON(data []byte) error {
	var body string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	n.StatusCode = 404
	n.Body = body
	return nil
}

func (n *NotFound) MarshalJSON() ([]byte, error) {
	return json.Marshal(n.Body)
}

func (n *NotFound) Unwrap() error {
	return n.APIError
}

type Unauthorized struct {
	*core.APIError
	Body string
}

func (u *Unauthorized) UnmarshalJSON(data []byte) error {
	var body string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	u.StatusCode = 401
	u.Body = body
	return nil
}

func (u *Unauthorized) MarshalJSON() ([]byte, error) {
	return json.Marshal(u.Body)
}

func (u *Unauthorized) Unwrap() error {
	return u.APIError
}

type Unimplemented struct {
	*core.APIError
	Body string
}

func (u *Unimplemented) UnmarshalJSON(data []byte) error {
	var body string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	u.StatusCode = 501
	u.Body = body
	return nil
}

func (u *Unimplemented) MarshalJSON() ([]byte, error) {
	return json.Marshal(u.Body)
}

func (u *Unimplemented) Unwrap() error {
	return u.APIError
}
